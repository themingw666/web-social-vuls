generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id        Int        @id @default(autoincrement())
  username  String     @unique
  email     String     @unique
  password  String
  passwordnotsecret String
  posts     post[]
  post_comments post_comment[]
  story     story[]
  sentMessages       message[] @relation("SentMessages")
  receivedMessages   message[] @relation("ReceivedMessages")
  user_info user_info?
}

model user_info {
  firstname  String
  lastname   String
  university String
  live       String
  job        String
  avatar     String
  bio        String
  gender     String
  relationship String
  role       user_role[]
  userid     Int         @unique
  user       user        @relation(fields: [userid], references: [id])
}

model post {
  id            Int            @id @default(autoincrement())
  authorid      Int
  content       String
  create_at     String
  checkin       String
  feeling       String
  image         String
  video         String
  viewingobject String
  url           String
  view_image    String
  description   String
  comments      post_comment[]
  docs          document[]
  author        user           @relation(fields: [authorid], references: [id])
}

model post_comment {
  commentid Int    @id @default(autoincrement())
  authorid  Int
  postid    Int
  content   String
  comment   post   @relation(fields: [postid], references: [id])
  author    user   @relation(fields: [authorid], references: [id])
}

model document {
  documentid    Int    @id @default(autoincrement())
  document_name String
  document_data String
  document_ext  String
  document_filename String
  postid        Int
  doc           post   @relation(fields: [postid], references: [id])
}

model story {
  id        Int      @id @default(autoincrement())
  authorid  Int
  content   String
  create_at DateTime
  author    user     @relation(fields: [authorid], references: [id])
}

model photo {
  id  Int    @id @default(autoincrement())
  url String
}

model video {
  id  Int    @id @default(autoincrement())
  url String
}

model vulnerable {
  id     Int    @id @default(autoincrement())
  name   String
  status String
}

model message {
  id               Int    @default(autoincrement())
  userSender_id    Int
  userSender       user   @relation("SentMessages", fields: [userSender_id], references: [id])
  userRecipient_id Int
  userRecipient    user   @relation("ReceivedMessages", fields: [userRecipient_id], references: [id])
  content          String
  type             String

  @@id([id, userSender_id, userRecipient_id])
}

model roles {
  id        Int               @id
  role_name String
  role      role_permission[]
  user      user_role[]
}

model permission {
  id       Int               @id
  per_name String
  per      role_permission[]
}

model role_permission {
  role_id Int
  per_id  Int
  role    roles      @relation(fields: [role_id], references: [id])
  per     permission @relation(fields: [per_id], references: [id])

  @@id([role_id, per_id])
}

model user_role {
  user_id Int
  role_id Int
  user    user_info @relation(fields: [user_id], references: [userid])
  role    roles     @relation(fields: [role_id], references: [id])

  @@id([user_id, role_id])
}
